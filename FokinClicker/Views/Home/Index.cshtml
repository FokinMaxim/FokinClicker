@model IndexViewModel

@section styles {
    <link href="@Url.Content("~/css/index.css")" rel="stylesheet">
    <style>
        body {
            background-image: url('@Url.Content("~/background.png")');
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
        }

        .intro-text {
            color: red;
        }
    </style>
}

<div class="col"
    <div class="row">
    <div class="col">
        <div>
            <h3 class="intro-text">Добро пожаловать во владения клана, @Model.User.UserName</h3,>
            <h3 class="intro-text">У вас уже накоплено <span id="current_score">@Model.User.CurrentScore</span> кусков варп камня</h4>
            <h3 class="intro-text">Всего вы добыли <span id="record_score">@Model.User.RecordScore</span> варп камня</h4>
            <h3 class="intro-text">В сражениях ты добываешь <span id="profit_per_click">@Model.User.ProfitPerClick</span> кусков за клик</h4>
            <h3 class="intro-text">Твои подчиненные ежесекундно добывают <span id="profit_per_second">@Model.User.ProfitPerSecond</span> кусков</h4>
        </div>
    </div>

    <div class="col justify-content-center">
        <button id="clickitem" class="click-item bg-transparent border-0">
            <img class="w-50" src="~/warpstone.png" />
        </button>
    </div>
    </div>

    <div class="col">
        <form asp-action="Logout" asp-controller="Auth">
            <input type="submit" class="btn btn-primary" value="Выйти из аккаунта" />
        </form>
        <h3 class="intro-text">Бусты</h3>
        <div class="d-flex">
            @foreach (var boost in Model.Boosts.Where(b => b.IsAuto))
            {
                var userBoost = Model.User.UserBoosts.FirstOrDefault(ub => ub.BoostId == boost.Id);

                var price = userBoost?.CurrentPrice ?? boost.Price;
                var quantity = userBoost?.Quantity ?? 0;

                <button class="boost-button border-0 bg-secondary m-3">
                    <span class="boost-id" hidden>@boost.Id</span>
                    <h4>@boost.Title</h4>
                    <img src="data:image/png;base64, @Convert.ToBase64String(boost.Image)" height="100" />
                    <h5 class="boost-price-string">Цена: <span class="boost-price">@price</span></h5>
                    <h5>
                        Доход: @boost.Profit
                        @if (boost.IsAuto)
                        {
                            <span> в секунду</span>
                        }
                    </h5>
                    <h5>
                        Количество приобретенных бустов: <span class="boost-quantity">@quantity</span>
                    </h5>
                </button>
            }
        <div>
    </div>
</div>
<div class="col">
        <h3 class="intro-text">Войска</h3>
        <div class="d-flex">
            @foreach (var boost in Model.Boosts.Where(b => !b.IsAuto))
            {
                var userBoost = Model.User.UserBoosts.FirstOrDefault(ub => ub.BoostId == boost.Id);
                var price = userBoost?.CurrentPrice ?? boost.Price;

                var quantity = userBoost?.Quantity ?? 0;

                <button class="boost-button border-0 bg-secondary m-3">
                    <span class="boost-id" hidden>@boost.Id</span>
                    <h4>@boost.Title</h4>
                    <img src="data:image/png;base64, @Convert.ToBase64String(boost.Image)" height="100" />
                    <h5 class="boost-price-string">Цена: <span class="boost-price">@price</span></h5>
                    <h5>
                        Доход: @boost.Profit
                        <h5>
                            Количество приобретенных бустов: <span class="boost-quantity">@quantity</span>
                        </h5>
                </button>
            }
            </div>


    <h3 class="intro-text">Военноначальники</h3>
        <div class="d-flex">
            @foreach (var support in Model.Supports)
            {
                var userSupport = Model.User.UserSupports.FirstOrDefault(ub => ub.SupportId == support.Id);
                var Us = Model.User.UserSupports;
                var price = support.Price;
                var quantity = 0;
                if (userSupport != null)
                {
                    price = userSupport?.CurrentPrice ?? support.Price;
                    quantity = userSupport?.Quantity ?? 0;
                }

                <button class="support-button border-0 bg-secondary m-3">
                    <span class="support-id" hidden>@support.Id</span>
                    <h4>@support.Title</h4>
                    <img src="data:image/png;base64, @Convert.ToBase64String(support.Image)" height="100" />
                    <h5 class="support-price-string">Цена: <span class="support-price">@price</span></h5>
                    <h5>
                        в два раза уселяет @Model.Boosts.FirstOrDefault(ub => ub.Id == support.BoostId).Title
                    </h5>

                    <h5>
                        Количество нанятых военначальников: <span class="support-quantity">@quantity</span>
                    </h5>
                </button>
            }
        </div>
</.div>

@section scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="~/js/index.js"></script>
}